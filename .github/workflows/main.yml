name: Build Executables

on:
  push:
    branches:
      - master

jobs:       
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ['windows-latest', 'ubuntu-latest', 'macos-latest']

    env:
      MAIN_PY_FILE: 'blinker.py'  # Define the path to your main.py file here

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.10.x

    - name: Install Python dependencies
      run: |
        pip install -r requirements.txt
      working-directory: ./

    - name: Install PyInstaller
      run: |
        pip install pyinstaller
      working-directory: ./

    - name: Build executable
      run: |
        pyinstaller ${{ env.MAIN_PY_FILE }}
      working-directory: ./

    - name: Create Artifact (Windows)
      if: matrix.os == 'windows-latest'
      uses: actions/upload-artifact@v3
      with:
        name: windows-executables
        path: dist/

    - name: Create Artifact (Linux)
      if: matrix.os == 'ubuntu-latest'
      uses: actions/upload-artifact@v3
      with:
        name: linux-executables
        path: dist/

    - name: Create Artifact (macOS)
      if: matrix.os == 'macos-latest'
      uses: actions/upload-artifact@v3
      with:
        name: macos-executables
        path: dist/

    - name: List files in dist folder
      run: ls -R ./dist/

    # New steps to zip the dist directory
    - name: Zip dist folder (Windows)
      if: matrix.os == 'windows-latest'
      run: Compress-Archive -Path dist/* -DestinationPath windows-executables.zip
      shell: pwsh

    - name: Zip dist folder (Unix-like)
      if: matrix.os != 'windows-latest'
      run: zip -r ${{ matrix.os }}-executables.zip dist/*

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1.1.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ github.run_number }}
        release_name: Release v${{ github.run_number }}
        draft: false
        prerelease: false
        
    - name: Upload Release Asset (Windows)
      if: matrix.os == 'windows-latest'
      uses: actions/upload-release-asset@v1.0.2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./windows-executables.zip
        asset_name: windows-executables.zip
        asset_content_type: application/zip

    - name: Upload Release Asset (Linux)
      if: matrix.os == 'ubuntu-latest'
      uses: actions/upload-release-asset@v1.0.2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./ubuntu-latest-executables.zip
        asset_name: linux-executables.zip
        asset_content_type: application/zip

    - name: Upload Release Asset (macOS)
      if: matrix.os == 'macos-latest'
      uses: actions/upload-release-asset@v1.0.2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./macos-latest-executables.zip
        asset_name: macos-executables.zip
        asset_content_type: application/zip